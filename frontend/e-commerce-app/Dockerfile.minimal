# Minimal React Application Dockerfile - Cross-platform compatible
# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Install essential build dependencies
RUN apk add --no-cache curl

# Copy package files and clear any existing locks
COPY package*.json ./

# Use a more compatible approach for dependency installation
RUN npm cache clean --force
RUN npm ci --prefer-offline --no-audit --progress=false

# Copy source code
COPY . .

# Build with error handling
RUN npm run build || (echo "Build failed, trying alternative approach..." && npm install --force && npm run build)

# Production stage - Use minimal nginx
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html

# Expose port
EXPOSE 80

# Simple health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 